akka {
  loglevel = DEBUG
}

mySpecialConfig {
  loglevel = INFO
}

# timed assestions test config
specialTimedAssertionsConfig {
  akka.test.single-expect-default = 0.3s
}

# intercepting log message test
interceptingLogMessages {
  akka {
    loggers = ["akka.testkit.TestEventListener"]
    test {
      filter-leeway = 5s
    }
  }
}

# routers demo
routersDemo {
  akka {
    actor.deployment {
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instances = 5
      }

      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave_1","/user/slave_2","/user/slave_3","/user/slave_4","/user/slave_5"]
      }
    }
  }
}

# dispathers demo
my-dispatcher {
  type = Dispatcher # PinnedDispatcher, CallingThreadDispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 1
  }
  throughput = 30
}

dispathersDemo {
  akka.actor.deployment {
    /rtjvm {
      dispatcher = my-dispatcher
    }
  }
}

mailboxesDemo {
  # mailboxes demo
  support-ticket-dispatcher {
    mailbox-type = "part5infra.Mailboxes$SupportTicketPriorityMailbox"
  }
  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }
  akka.actor.deployment {
    /altControlAwareActor {
      mailbox = control-mailbox
    }
  }
}